---
# The value of '@reading1' should be replaced
# with the citation key from your Bibtex file
# (here it's Readings.bib). E.g. @reades:2022
title: "Teaching introductory GIS programming to geographers using an open source Python approach"
nocite: |
  @Etherington:2016
bibliography: ../ref/Readings.bib
csl: ../ref/chicago-author-date.csl
format: 
  html: 
    number-sections: true
    shift-heading-level-by: 1
    number-depth: 1
    toc: true
    toc-depth: 2
    colorlinks: true
    cap-location: top
    highlight-style: github
---

Here’s a detailed analysis of Etherington’s *"Teaching introductory GIS programming to geographers using an open source Python approach"* based on your questions:

## **What kind of reading is it?**

- **Type of Document:**
  - Etherington’s work is an **academic paper** that can be classified as both a **technical and instructional** contribution. The paper is designed to share insights about teaching GIS (Geographic Information Systems) programming using an open-source Python approach to a geography-focused audience.
- **Contribution Type:** 
  - The contribution is primarily **empirical and pedagogical**. It draws from the author's teaching experiences and proposes methods for effectively teaching GIS programming with Python to students who may not have a strong programming background. The paper also highlights the challenges and successes encountered when implementing this approach in the classroom.

## **Who is the intended audience?**

- **Audience:**
  - The paper is aimed at **academics and educators in geography, GIS specialists, and field experts** who are interested in incorporating programming into GIS education. It may also appeal to **curriculum developers** in higher education who are looking to enhance GIS teaching with open-source tools like Python.
  - **How do we know?**
    - The content is focused on the teaching of technical skills to geography students, particularly through the lens of an academic or instructional setting. The language, the detailed discussions about curriculum structure, and teaching methods signal that this is intended for educators and academics who need practical approaches for introducing programming concepts to geographers.

## **How is the piece structured?**

- **Structure:**
  - **Introduction:** The paper begins by explaining the rationale for teaching GIS programming, particularly using Python as an open-source tool. It emphasizes the need for programming skills in modern geography and GIS careers.
  - **Methodology/Approach:** A large portion of the paper is dedicated to the teaching approach, explaining how introductory GIS programming is structured in Etherington’s courses. This section discusses the **pedagogical methods**, including hands-on coding exercises, use of specific Python libraries, and challenges students face.
  - **Challenges and Solutions:** The paper also provides a section addressing common challenges that students encounter, especially when they have little programming background, and offers solutions for how to overcome these obstacles.
  - **Case Studies/Examples:** Some practical examples and **case studies** are used to demonstrate the application of Python in solving real GIS problems.
  - **Conclusion:** The paper ends with reflections on the success of the approach and suggestions for further improvements in teaching GIS programming.
- **Response to Audience and Reading Type:**
  - The structure is organized to provide both a theoretical foundation and practical insights for educators. The detailed breakdown of the teaching process, combined with real-world examples, makes the content accessible and actionable for an academic audience interested in enhancing their teaching methods.

## **What are the key ideas, concepts, or theories discussed?**

- **Key Ideas:**
  - **Importance of Programming in GIS Education:** The paper emphasizes that programming skills are increasingly necessary for geographers and GIS professionals. Python, as an open-source language, is highlighted as an accessible and widely-used tool for these purposes.
  - **Open-Source Tools in Education:** Etherington advocates for the use of **open-source programming languages** like Python to make GIS education more accessible and affordable.
  - **Pedagogical Strategies for Teaching GIS Programming:** The paper discusses effective teaching methods, including hands-on learning, collaborative problem-solving, and incremental learning approaches that help students build confidence in programming.
  - **Challenges in Teaching Programming to Geographers:** The paper identifies specific challenges, such as students' resistance to learning programming or their initial struggles with syntax and logic, and how educators can address these issues through structured teaching approaches.
- **How do we know?**
  - These ideas are explicitly discussed in the paper. Etherington presents the case for why geographers need programming skills, explains the benefits of Python for GIS education, and gives detailed examples of how these concepts are applied in teaching.

## **What is the overall contribution?**

- **Main Contribution:**
  - The paper contributes by **offering practical strategies for teaching GIS programming using Python**, specifically tailored for geographers who may have little to no programming experience. It emphasizes a gradual, supportive learning process and demonstrates the benefits of using Python’s open-source libraries for GIS work.
- **What gap does it respond to?**
  - It addresses the gap in the GIS education field where many students, especially in geography programs, may lack programming skills but increasingly require them for GIS-related jobs. The paper responds to the need for **approachable teaching methods** that can bridge this gap between geography and programming.
- **Key Findings or Conclusions:**
  - Etherington concludes that Python is a highly effective tool for introducing programming in GIS education and that, with proper pedagogical support, students can overcome their initial difficulties with programming. The open-source nature of Python also makes it a valuable resource for institutions with limited budgets for software.

## **What issues or gaps remain?**

- **Remaining Issues:**
  - **Context-Specific Challenges:** The teaching methods presented may not easily translate to all institutional contexts, particularly those where students have varied levels of prior programming knowledge. For example, students in some programs may need more intensive foundational programming courses before they can grasp Python for GIS.
  - **Learning Curves and Resources:** The paper acknowledges that despite Python being a relatively accessible programming language, students may still find the learning curve steep. Etherington addresses this by recommending incremental learning and hands-on practice but doesn’t fully resolve the issue of how to scale this approach in larger, more diverse classrooms.
- **Other Case Studies or Contexts:** 
  - The ideas in this paper could be applied to other fields where **spatial data analysis** is critical, such as urban planning, environmental science, or disaster management. In these fields, the use of open-source programming tools could similarly provide accessible, practical GIS training that prepares students for data-heavy roles.
- **Future Work Identified:**
  - Future work could explore **how to scale this teaching method** to larger classrooms or more diverse student populations, and how to integrate more advanced programming concepts in later stages of GIS education. There could also be research into the **long-term impact** of teaching Python in GIS programs—do students continue to use these skills in their careers, and how effective are they in applying them to real-world GIS challenges?

## **Conclusion**

Etherington’s paper offers a valuable pedagogical contribution to GIS education by advocating for the use of Python as an open-source programming tool. It provides practical strategies for teaching GIS programming to students with limited coding experience, emphasizing the importance of incremental learning and hands-on application. The paper fills a gap in GIS education by addressing the challenges students face when learning programming and offering solutions to make the learning process more approachable. While the approach is effective, there remain questions about its scalability and applicability in different educational contexts. Future work could focus on expanding this teaching method and exploring its long-term impact on students’ careers in GIS.