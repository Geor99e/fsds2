---
title: "Textual Data"
---

## Overview

Although the direct use of textual (both structured and unstructured) data is still relatively rare in spatial analyses, the growth of crowd-sourced and user-generated content points to the growing importance of this area. he tools and approaches in this area are also evolving quickly and changing rapidly, so this week is intended primarily to familiarise you with the basic landscape in preparation for you developing your skills further in your own time!

::: {.callout-important}
## Learning Outcomes

1. An awareness of the benefits of separating content from presentation. 
2. A basic understanding of pattern-matching in Python (you will have been exposed to this Week 2 of CASA0005)
3. A basic understanding of how text can be 'cleaned' to make it more amenable for analysis
4. An appreciation of parallelisation in the context of text processing.
5. An appreciation of how text can be analysed.
:::

The manipulation of text requires a high level of abstraction -- of thinking about words as data in ways that are deeply counter-intuitive -- but the ability to do forms a critical bridge between this block and the subsequent one, while also reinforcing the idea that numerical, spatial, and textual data analyses provide alternative (and often complementary) views into the data. 

## Lectures

Come to class prepared to present/discuss:

| Session | Video | Presentation | 
| :------ | :---- | :----------- | 
| Notebooks as Documents | [Video]({{< var vids.notebooks >}}) | [Slides](../lectures/7.1-Notebooks_as_Documents.qmd) | 
| Patterns in Text | [Video]({{< var vids.patterns >}}) | [Slides](../lectures/7.2-Patterns_in_Text.qmd) | 
| Cleaning Text | [Video]({{< var vids.cleaning >}}) | [Slides](../lectures/7.3-Cleaning_Text.qmd) | 
| Analysing Text | [Video]({{< var vids.analysing >}}) | [Slides](../lectures/7.4-Analysing_Text.qmd) | 

## Other Prep

- Come to class prepared to present/discuss:
  - @Ladd:2020 <[URL](https://programminghistorian.org/en/lessons/common-similarity-measures)>
  - @Lavin:2019 <[URL](https://programminghistorian.org/en/lessons/analyzing-documents-with-tfidf)>
  - @Reades:2023 <[URL](https://doi.org/10.46430/phen0111)>
- Complete the [short Moodle quiz]({{< var quiz.week7 >}}) associated with this week's activities.

::: {.callout-tip}
## Connections

Conceptually, this is by far the hardest week of the entire term: there is very little upon which to draw from other modules, and the processing of text with computers rarely makes it beyond simple regular expressions; however, the growth in data that is 'accidental, open, and everywhere' [@arribas2014accidental] means that a lot more of it is **unstructured** and contains free-text written by humans as well as numerical and coordinate data generated by sensors or transactions. Using tutorial from the [Programming Historian](https://programminghistorian.org), we're going to look at the foundations of text processing and how we can extract important terms from a document as well as, ultimately, the foundations upon which modern Large Language Models are built. 

:::

## Practical

In the practical we will continue to work with the InsideAirbnb data, here focussing on the third 'class' of data in the data set: text. We will see how working with text is more complex than working with numeric or spatial data and, consequently, why the computational costs rise accordingly. This practical should suggest some new lines of inquiry for [Group Project](../assessments/group.qmd).

::: {.callout-tip}
## Connections

The practical focusses on:

- Applying simple regular expressions to find patterns in text.
- How to clean text in preparation for further analysis.
- Simple transformations that allow you to analyse text (e.g. TF/IDF)
- Ways of exploring groups/similarity in textual data.

:::

To access the practical:

```{python}
#| output: asis
#| echo: false
#| code-fold: false

prac = "Practical-07-Textual_Data"

print("1. [Preview]({{< var module.web >}}practicals/" + prac + ".html)")
print("2. [Download]({{< var module.web >}}practicals/" + prac + ".ipynb)")

```

Bonus material containing material related to Natural Language Processing (NLP): 

```{python}
#| output: asis
#| echo: false
#| code-fold: false

prac = "Practical-07-Textual_Data-Pt2"

print("3. [Preview]({{< var module.web >}}practicals/" + prac + ".html)")
print("4. [Download]({{< var module.web >}}practicals/" + prac + ".ipynb)")

```

## References
