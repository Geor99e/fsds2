---
title: "Foundations (Pt. 2)"
---

## Overview

This week we will dig into data (lists and dictionaries) in greater detail so that you understand how we design structures to store and organise data to simplify our analysis. We will also look at how frequently-used code can be packaged up in functions and libraries. This is the point at which we begin to engage with code in a more abstract way because we are increasingly interested in reusability and flexibility.

::: {.callout-important}
## Learning Objectives

1. To see how 'simple' concepts can be (re)combined to tackle complex problems.
2. To develop an understanding of code re-use through functions.
3. To develop an appreciation of the utility of packages and namespaces.
::: 

This week we also start to move beyond Code Camp, so although you should recognise many of the _parts_ that we discuss,  you'll see that we begin to put them together in a new way. The next two weeks are a critical transition between content that you might have seen before in Code Camp (see [Practical](#practical)) or other introductory materials, and the 'data science' approach.

### Lectures

Come to class prepared to present/discuss:

| Session | Video | Presentation    | 
| :------ | :---- | :-------------- | 
| Dictionaries | [Video]({{< var vids.dicts >}}) | [Slides](../lectures/3.1-Dictionaries.qmd) | 
| LOLs | [Video]({{< var vids.lols >}}) |[Notes](../lectures/3.2-LOLs.qmd) | 
| DOLs to Data | [Video]({{< var vids.dols >}}) | [Slides](../lectures/3.3-DOLs_to_Data.qmd) | 
| Functions | [Video]({{< var vids.functions >}}) | [Slides](../lectures/3.4-Functions.qmd) | 
| Packages | [Video]({{< var vids.packages >}}) | [Slides](../lectures/3.5-Packages.qmd) | 

### Other Preparatory Activities

- Come to class prepared to present/discuss:
  - @Etherington:2016 <[URL](https://doi.org/10.1080/03098265.2015.1086981)>
  - @Donoho:2017 <[URL](https://doi.org/10.1080/10618600.2017.1384734)>
  - @Unwin:1980 <[URL](https://doi.org/10.1080/03098268008708772)>
- Complete the [short Moodle quiz]({{< var quiz.week3 >}}) asociated with the week's activities.

::: {.callout-tip}
## Readings

You will find @Unwin:1980 useful for understanding why the practicals are set up the way they are and why we don't post 'answers' until a few days after the last practical group has completed its session. @Donoho:2017 will give you context on how data science might differ from what's covered in Quantitative Methods, and @Etherington:2016 will hopefully help you to see how spatial and programming concepts can be connected to one another to improve our understanding of *both*. For a particularly good example of this see the *GIS Algorithms* text [@xiao:2016].

:::

## Practical

This week's practical will take you through the use of dictionaries and introduce the concept of 'nested' data structures. We'll also be looking at how functions (and variables) can be collected into resuable packages that we can either make ourselves or draw on a worldwide bank of experts -- I know who _I'd_ rather depend on when the opportunity arises! However, if you have *not yet completed Code Camp* (or were not aware of it!), then you will benefit *enormously* from tackling the following sessions:

- [Dictionaries](https://jreades.github.io/code-camp/lessons/Dicts.html)
- [Loops](https://jreades.github.io/code-camp/lessons/Loops.html)
- [Recap 2](https://jreades.github.io/code-camp/lessons/Recap_2.html)

To run the code for these sessions you can either:

1. Follow the instructions for running these [in Google's Collaboratory](https://jreades.github.io/sds_env/req/code_camp.html); or 
2. Copy and paste the code into a new Jupyter Notebook and run the code in Docker.

::: {.callout-tip}
## Connections

The practical focusses on:

- Comparing the use of Python lists and dictionaries to store tabular data.
- Extending lists and dictionaries into nested data structures.
- Beginning to make use of packages to access/interact with data.
::: 

To access the practical:

1. [Preview on GitHub]({{< var module.prac > >}}practicals/Practical-03-Foundations_2.ipynb)
2. [Download the Notebook]({{< var module.raw >}}practicals/Practical-03-Foundations_2.ipynb)

## References
