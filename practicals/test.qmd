---
title: "Testing"
subtitle: "Easing into EDA"
jupyter: python3
data:
  fn: "2023-09-06-listings-1.csv.gz"
---

### Rendered

```{python}
#| echo: false
#| 
from IPython.display import display, Markdown
def write_code(msg:str) -> str:
    return Markdown("```python\n" + msg + "\n```")

def write_out(msg:str) -> str:
    return Markdown("```\n" + msg + "\n```")

import sys
from contextlib import contextmanager
from io import StringIO

@contextmanager
def captureStdOut(output):
    stdout = sys.stdout
    sys.stdout = output
    try:
        yield
    finally:
        sys.stdout = stdout

class Capturing(list):
    def __enter__(self):
        self._stdout = sys.stdout
        sys.stdout = self._stringio = StringIO()
        return self
    def __exit__(self, *args):
        self.extend(self._stringio.getvalue().splitlines())
        del self._stringio    # free up some memory
        sys.stdout = self._stdout

msg = """path = '~/{{< var data.fn >}}'
print(path)
"""

msg = """path = '~jreades/text.csv'
print(path)
"""
```

```{python}
# | echo: false
write_code(msg)
```

```{python}
import ast
Markdown("```{python}\n" + ast.literal_eval(msg) + "\n```")
```


from IPython.core.formatters import format_display_data
formatted, metadata = format_display_data(Markdown(msg))

t = format_display_data(Markdown(msg))[0]['text/markdown']
print(t)
write_code(ast.literal_eval(t))